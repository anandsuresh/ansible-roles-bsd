---

#-------------------------------------------------------------------------------
# VARIABLES
#-------------------------------------------------------------------------------

- name: 'include variables'
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - install
    - node_exporter

#-------------------------------------------------------------------------------
# PACKAGING
#-------------------------------------------------------------------------------

- name: 'package install node_exporter'
  package:
    state: 'present'
    name: "{{package_name_node_exporter}}"
  tags:
    - install
    - node_exporter

#-------------------------------------------------------------------------------
# FILES
#-------------------------------------------------------------------------------

- name: 'file create data.dir'
  file:
    state: 'directory'
    path: "{{file_dst_data_dir}}"
    mode: "{{file_mode_data_dir}}"
    owner: "{{file_owner_data_dir}}"
    group: "{{file_group_data_dir}}"
  tags:
    - install
    - node_exporter

- name: 'file create node_exporter_data.dir'
  file:
    state: 'directory'
    path: "{{file_dst_node_exporter_data_dir}}"
    mode: "{{file_mode_node_exporter_data_dir}}"
    owner: "{{file_owner_node_exporter_data_dir}}"
    group: "{{file_group_node_exporter_data_dir}}"
  tags:
    - install
    - node_exporter

- name: 'file create textfile_collector.dir'
  file:
    state: 'directory'
    path: "{{file_dst_textfile_collector_dir}}"
    mode: "{{file_mode_textfile_collector_dir}}"
    owner: "{{file_owner_textfile_collector_dir}}"
    group: "{{file_group_textfile_collector_dir}}"
  tags:
    - install
    - node_exporter

- name: 'line config node_exporter_textfile_dir'
  lineinfile:
    state: 'present'
    line: "{{file_line_node_exporter_textfile_dir}}"
    regexp: "^{{file_regexp_node_exporter_textfile_dir}}=.*"
    dest: "{{file_dest_node_exporter_textfile_dir}}"
    create: 'yes'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - install
    - node_exporter

- name: 'line config node_exporter_flags'
  lineinfile:
    state: 'present'
    line: "{{file_line_node_exporter_flags}}"
    regexp: "^{{file_regexp_node_exporter_flags}}=.*"
    dest: "{{file_dest_node_exporter_flags}}"
    create: 'yes'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - install
    - node_exporter

#-------------------------------------------------------------------------------
# FILES
#-------------------------------------------------------------------------------

- name: 'stat file monit.d'
  stat:
    path: "{{file_dst_monit_d}}"
  register: register_monit_d
  when: (node_exporter_monitor_monit_state is match('true|yes|enable'))
  tags:
    - install
    - node_exporter

- name: 'file create monit.d'
  file:
    state: 'directory'
    path: "{{file_dst_monit_d}}"
    mode: "{{file_mode_monit_d}}"
    owner: "{{file_owner_monit_d}}"
    group: "{{file_group_monit_d}}"
  when: (node_exporter_monitor_monit_state is match('true|yes|enable')) and (register_monit_d.stat.exists == False)
  tags:
    - install
    - node_exporter

#-------------------------------------------------------------------------------
# COMMANDS
#-------------------------------------------------------------------------------

- name: 'command check service monit'
  shell: "{{command_cmd_check_service_monit}}"
  register: register_check_service_monit
  changed_when: (register_check_service_monit.rc > 2)
  failed_when: (register_check_service_monit.rc > 2)
  check_mode: 'no'
  when: (node_exporter_monitor_monit_state is match('true|yes|enable'))
  tags:
    - install
    - node_exporter

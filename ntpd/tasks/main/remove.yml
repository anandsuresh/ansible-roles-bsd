---

#-------------------------------------------------------------------------------
# VARIABLES
#-------------------------------------------------------------------------------

- name: 'include variables'
  include_vars: "{{item}}"
  with_first_found:
    - files:
      - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
      - "vars/{{ansible_os_family}}.yml"
      - 'vars/main.yml'
      skip: 'true'
  tags:
    - remove
    - ntpd

#-------------------------------------------------------------------------------
# COMMANDS
#-------------------------------------------------------------------------------

- name: 'command info ntpd'
  shell: "{{command_cmd_info_ntpd}}"
  register: register_info_ntpd
  failed_when: (register_info_ntpd.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - remove
    - ntpd

- name: 'command disable ntpd'
  command: "{{command_cmd_disable_ntpd}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_info_ntpd.rc == 0)
  tags:
    - remove
    - ntpd

- name: 'command stop ntpd'
  command: "{{command_cmd_stop_ntpd}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_info_ntpd.rc == 0)
  tags:
    - remove
    - ntpd

#-------------------------------------------------------------------------------
# PACKAGING
#-------------------------------------------------------------------------------

- name: 'package remove ntpd'
  package:
    state: 'absent'
    name: "{{package_name_ntpd}}"
  register: register_freebsd_ntpd
  tags:
    - remove
    - ntpd

#-------------------------------------------------------------------------------
# FILES
#-------------------------------------------------------------------------------

- name: 'line remove ntpd_enable'
  lineinfile:
    state: 'absent'
    line: "{{file_line_ntpd_enable}}=\"NO\" # Ansible: Remove ntpd"
    regexp: "^{{file_line_ntpd_enable}}="
    dest: "{{file_dst_ntpd_enable}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - remove
    - ntpd

- name: 'line config ntpd_check-time'
  lineinfile:
    state: 'absent'
    line: "{{file_line_ntpd_check_time}} # Ansible: ntpd_check-time"
    regexp: "# Ansible: ntpd_check-time$"
    dest: "{{file_dst_ntpd_check_time}}"
  tags:
    - remove
    - ntpd

- name: 'file remove ntpd_check-time.sh'
  file:
    state: 'absent'
    path: "{{file_dst_ntpd_check_time_sh}}"
  tags:
    - remove
    - ntpd

- name: 'line config ntpd_update-time'
  lineinfile:
    state: 'absent'
    line: "{{file_line_ntpd_update_time}} # Ansible: ntpd_update-time"
    regexp: "# Ansible: ntpd_update-time$"
    dest: "{{file_dst_ntpd_update_time}}"
  tags:
    - remove
    - ntpd

- name: 'file remove ntpd_update-time.sh'
  file:
    state: 'absent'
    path: "{{file_dst_ntpd_update_time_sh}}"
  tags:
    - remove
    - ntpd

- name: 'file remove ntpd_script.dir'
  file:
    state: 'absent'
    path: "{{file_dst_ntpd_script_dir}}"
  tags:
    - remove
    - ntpd

- name: 'file remove ntp.conf'
  file:
    state: 'absent'
    path: "{{file_dst_ntp_conf}}"
  tags:
    - remove
    - ntpd

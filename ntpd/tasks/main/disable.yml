---

#-------------------------------------------------------------------------------
# VARIABLES
#-------------------------------------------------------------------------------

- name: 'include variables'
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - disable
    - ntpd

#-------------------------------------------------------------------------------
# FILES
#-------------------------------------------------------------------------------

- name: 'file create ntp.conf'
  template:
    src: "{{file_src_ntp_conf}}"
    dest: "{{file_dst_ntp_conf}}"
    mode: "{{file_mode_ntp_conf}}"
    owner: "{{file_owner_ntp_conf}}"
    group: "{{file_group_ntp_conf}}"
  tags:
    - disable
    - ntpd

- name: 'file remove ntpd_check-time'
  file:
    state: 'absent'
    path: "{{file_dst_ntpd_check_time}}"
  tags:
    - disable
    - ntpd

- name: 'cron create ntpd_check-time'
  cron:
    state: 'present'
    disabled: 'yes'
    name: "{{cron_name_ntpd_check_time}}"
    day: "{{cron_day_ntpd_check_time}}"
    hour: "{{cron_hour_ntpd_check_time}}"
    minute: "{{cron_minute_ntpd_check_time}}"
    month: "{{cron_month_ntpd_check_time}}"
    weekday: "{{cron_weekday_ntpd_check_time}}"
    user: "{{cron_user_ntpd_check_time}}"
    job: "{{cron_job_ntpd_check_time}}"
  tags:
    - disable
    - ntpd

- name: 'file remove ntpd_update-time'
  file:
    state: 'absent'
    path: "{{file_dst_ntpd_update_time}}"
  tags:
    - disable
    - ntpd

- name: 'cron remove ntpd_update-time'
  cron:
    state: 'absent'
    name: "{{cron_name_ntpd_update_time}}"
    user: "{{cron_user_ntpd_update_time}}"
  tags:
    - disable
    - ntpd

- name: 'line disable ntpd_enable'
  lineinfile:
    state: 'present'
    line: "{{file_line_ntpd_enable}}=\"NO\" # Ansible: Disable ntp"
    regexp: "^{{file_line_ntpd_enable}}="
    dest: "{{file_dst_ntpd_enable}}"
    create: 'yes'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - disable
    - ntpd

#-------------------------------------------------------------------------------
# COMMANDS
#-------------------------------------------------------------------------------

- name: 'command status ntpd'
  command: "{{command_cmd_status_ntpd}}"
  register: register_status_ntpd
  changed_when: (register_status_ntpd.rc > 1)
  failed_when: (register_status_ntpd.rc > 1)
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - disable
    - ntpd

- name: 'command disable ntpd'
  command: "{{command_cmd_disable_ntpd}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_status_ntpd.rc == 0)
  tags:
    - disable
    - ntpd

- name: 'command check ntpd'
  command: "{{command_cmd_check_ntpd}}"
  register: register_check_ntpd
  changed_when: (register_check_ntpd.rc > 1)
  failed_when: (register_check_ntpd.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - disable
    - ntpd

- name: 'command stop ntpd'
  command: "{{command_cmd_stop_ntpd}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_check_ntpd.rc == 0)
  tags:
    - disable
    - ntpd

#-------------------------------------------------------------------------------
# SYSTEM
#-------------------------------------------------------------------------------

- name: 'service stop ntpd'
  service:
    state: 'stopped'
    enabled: 'no'
    name: "{{service_name_ntpd}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - disable
    - ntpd

---

#-------------------------------------------------------------------------------
# VARIABLES
#-------------------------------------------------------------------------------

- name: 'include variables'
  include_vars: "{{item}}"
  with_first_found:
    - files:
      - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
      - "vars/{{ansible_os_family}}.yml"
      - 'vars/main.yml'
      errors: 'ignore'
  tags:
    - enable
    - unbound

#-------------------------------------------------------------------------------
# FILES
#-------------------------------------------------------------------------------

- name: 'file copy root.hints'
  copy:
    src: "{{file_src_root_hints}}"
    dest: "{{file_dst_root_hints}}"
    mode: "{{file_mode_root_hints}}"
    owner: "{{file_owner_root_hints}}"
    group: "{{file_group_root_hints}}"
    validate: "{{file_validate_root_hints}}"
  notify: 'service restart unbound'
  tags:
    - enable
    - unbound

- name: 'file create root.hints.link'
  file:
    state: 'link'
    src: "{{file_src_root_hints_link}}"
    path: "{{file_dst_root_hints_link}}"
    owner: "{{file_owner_root_hints_link}}"
    group: "{{file_group_root_hints_link}}"
  notify: 'service restart unbound'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - install
    - unbound

- name: 'file create unbound.conf'
  template:
    src: "{{file_src_unbound_conf}}"
    dest: "{{file_dst_unbound_conf}}"
    mode: "{{file_mode_unbound_conf}}"
    owner: "{{file_owner_unbound_conf}}"
    group: "{{file_group_unbound_conf}}"
    validate: "{{file_validate_unbound_conf}}"
  notify: 'service restart unbound'
  tags:
    - enable
    - unbound

- name: 'file create unbound.conf.link'
  file:
    state: 'link'
    src: "{{file_src_unbound_conf_link}}"
    path: "{{file_dst_unbound_conf_link}}"
    owner: "{{file_owner_unbound_conf_link}}"
    group: "{{file_group_unbound_conf_link}}"
  notify: 'service restart unbound'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - install
    - unbound

- name: 'line enable unbound_enable'
  lineinfile:
    state: 'present'
    line: "{{file_line_unbound_enable}}=\"YES\" # Ansible: Enable unbound"
    regexp: "^{{file_line_unbound_enable}}="
    dest: "{{file_dst_unbound_enable}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - enable
    - unbound

#-------------------------------------------------------------------------------
# COMMANDS
#-------------------------------------------------------------------------------

- name: 'command status unbound'
  command: "{{command_cmd_status_unbound}}"
  register: register_status_unbound
  changed_when: (register_status_unbound.rc > 1)
  failed_when: (register_status_unbound.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - enable
    - unbound

- name: 'command enable unbound'
  command: "{{command_cmd_enable_unbound}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_status_unbound.rc == 1)
  tags:
    - enable
    - unbound

- name: 'command check unbound'
  command: "{{command_cmd_check_unbound}}"
  register: register_check_unbound
  changed_when: (register_check_unbound.rc > 1)
  failed_when: (register_check_unbound.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - enable
    - unbound

- name: 'command start unbound'
  command: "{{command_cmd_start_unbound}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_check_unbound.rc == 1)
  tags:
    - enable
    - unbound

#-------------------------------------------------------------------------------
# SYSTEM
#-------------------------------------------------------------------------------

- name: 'service start unbound'
  service:
    state: 'started'
    enabled: 'yes'
    name: "{{service_name_unbound}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - enable
    - unbound
